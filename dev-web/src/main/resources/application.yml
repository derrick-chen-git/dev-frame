server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone:  http://47.106.212.169:8761/eureka/
    enabled: true
    registerWithEureka: true
    fetchRegistry: true
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
    instance-id: ${spring.application.name}
    prefer-ip-address: true
  healthcheck:
    enabled: true

feign:
  hystrix:
    enabled: true

spring:
    cloud:
      stream:
        binders: # 在此处配置要绑定的rabbitmq的服务信息；
          defaultRabbit: # 表示定义的名称，用于于binding整合
            type: rabbit # 消息组件类型
            environment: # 设置rabbitmq的相关的环境配置
              spring:
                rabbitmq:
                 addresses: 47.106.212.169:5672
                 username: guest
                 password: guest
                 virtual-host: /
        bindings: # 服务的整合处理
          test1-input: # 这个名字是一个通道的名称，在分析具体源代码的时候会进行说明
            destination: test1-exchange # 表示要使用的Exchange名称定义
            content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
            binder: defaultRabbit # 设置要绑定的消息服务的具体设置
    application:
      name: frame-dev
    #环境dev，pro 用于配置获取
    profiles:
      active: dev
    #数据源，一主两从，读写分离
    datasource:
      master:
        jdbc-url: jdbc:mysql://47.106.212.169:3307/test?useUnicode=true&amp;characterEncoding=utf8&amp;emptyStringsConvertToZero=true
        username: root
        password: root
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource

        max-active: 20
        initial-size: 1
        min-idle: 3
        max-wait: 600
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        poolPreparedStatements: true
      slave1:
        jdbc-url: jdbc:mysql://47.106.212.169:3308/test?useUnicode=true&amp;characterEncoding=utf8&amp;emptyStringsConvertToZero=true
        username: onlyselect
        password: 123456
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource

        max-active: 20
        initial-size: 1
        min-idle: 3
        max-wait: 600
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        poolPreparedStatements: true
      slave2:
        jdbc-url: jdbc:mysql://47.106.212.169:3309/test?useUnicode=true&amp;characterEncoding=utf8&amp;emptyStringsConvertToZero=true
        username: onlyselect
        password: 123456
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource

        max-active: 20
        initial-size: 1
        min-idle: 3
        max-wait: 600
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        poolPreparedStatements: true

    redis:
      cluster:
        #集群扫描时间
        scan-interval: 2000
        max-redirects: 6
        nodes:
          47.106.212.169:9001,
          47.106.212.169:9002,
          47.106.212.169:9003,
          47.106.212.169:9004,
          47.106.212.169:9005,
          47.106.212.169:9006
        pool:
          max-idle: 100
          min-idle: 1
          max-active: 1000
          max-wait: -1


    rabbitmq:
        host: 47.106.212.169
        port: 5672
        username: guest
        password: guest
        publisher-confirms: true
        publisher-returns: true
        listener:
          simple:
            acknowledge-mode: manual
            retry:
              enabled: true

mybatis-plus:
      mapper-locations: classpath:mapper/*.xml
      type-aliases-package: com.frame.dev.web.entity
      global-config:
        db-config:
          column-like : true
          #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
          #id-type: 1
          #驼峰下划线转换
          #db-column-underline: true
          logic-delete-value: 1
          logic-not-delete-value: 0
          db-type: mysql
        #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
      configuration:
        map-underscore-to-camel-case: true
        cache-enabled: false
       # jdbc-type-for-null: null

pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#redis分布式锁实现，https://github.com/redisson/redisson/wiki/ redisson配置 参开官方文档
redisson:
  node-addresses:
  - "redis://47.106.212.169:9001"
  - "redis://47.106.212.169:9002"
  - "redis://47.106.212.169:9003"
  - "redis://47.106.212.169:9004"
  - "redis://47.106.212.169:9005"
  - "redis://47.106.212.169:9006"
  scan-interval: 2000
  load-balancer: org.redisson.connection.balancer.RoundRobinLoadBalancer
  read-mode: "SLAVE"


#日志配置文件
---
spring:
  profiles: dev
logging:
  config: classpath:logConfig/logback-dev.xml
---
spring:
  profiles: prd
logging:
  config: classpath:logConfig/logback-prd.xml

feign:

